#!/bin/sh
# postinst script
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

HOME=/home/pgdbtools

config_path () {
    local CONFIG_FILE="config/$(hostname -s)/$1"
    [ ! -f "$HOME/pgdb_tools/$CONFIG_FILE" ] && CONFIG_FILE="config/$1"
    echo "$CONFIG_FILE"
}


case "$1" in
    configure)
        # Symlink config
        SYS_CONFIG="$(config_path sys.config)"
        VM_ARGS="$(config_path vm.args)"
        echo "Symlink to $SYS_CONFIG and $VM_ARGS"
        ln -fs $SYS_CONFIG $VM_ARGS $HOME/pgdb_tools

        # Change ownership
        chown -R pgdbtools: $HOME/pgdb_tools

        # Start application
        echo "Starting pgdb-tools"
        /etc/init.d/pgdb-tools start || true
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
